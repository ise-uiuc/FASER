repo,commit,filename,classname,testname,assert_string,line,bound,all_close,lessthan,seed,pass_equal,rtol_bound,reverse
pyro,3c6a591f8d18c7a65f716e9ff1241e0cd898b2da,tests/integration_tests/test_conjugate_gaussian_models.py,GaussianChainTests,test_elbo_reparameterized_N_is_8,"assert_equal(0.0, max_errors[0], prec=0.03)",249,0.03,yes,yes,yes,yes,0,
pyro,3c6a591f8d18c7a65f716e9ff1241e0cd898b2da,tests/integration_tests/test_conjugate_gaussian_models.py,GaussianPyramidTests,test_elbo_reparameterized_four_layers,"assert_equal(0.0, max_log_sig_error, prec=prec)",650,slow test,,,,,,
pyro,3c6a591f8d18c7a65f716e9ff1241e0cd898b2da,tests/infer/test_inference.py,PoissonGammaTests,test_mmd_vectorized,"assert_equal(pyro.param('alpha_q'), self.alpha0, prec=0.2, msg='{} vs {}'.format())",473,0.2,yes,yes,yes,yes,0,
pyro,3c6a591f8d18c7a65f716e9ff1241e0cd898b2da,tests/integration_tests/test_conjugate_gaussian_models.py,GaussianPyramidTests,test_elbo_nonreparameterized_three_layers,"assert_equal(0.0, max_log_sig_error, prec=0.04)",650,slow test,,,,,,
pyro,3c6a591f8d18c7a65f716e9ff1241e0cd898b2da,tests/infer/test_inference.py,NormalNormalTests,test_mmd_nonvectorized,"assert_equal(0.0, loc_error, prec=0.05)",238,0.05,yes,yes,yes,yes,0,
pyro,3c6a591f8d18c7a65f716e9ff1241e0cd898b2da,tests/integration_tests/test_conjugate_gaussian_models.py,GaussianPyramidTests,test_elbo_reparameterized_three_layers,"assert_equal(0.0, max_log_sig_error, prec=0.04)",650,0.04,yes,yes,yes,yes,0,
pyro,3c6a591f8d18c7a65f716e9ff1241e0cd898b2da,tests/integration_tests/test_tracegraph_elbo.py,RaoBlackwellizationTests,test_plate_in_elbo_with_superfluous_rvs,"assert_equal(0.0, loc_error, prec=0.04)",629,0.04,yes,yes,yes,yes,0,
pyro,,tests/integration_tests/test_conjugate_gaussian_models.py,GaussianChainTests,test_elbo_reparameterized_N_is_3,"assert_equal(0.0, max_errors[0], prec=0.03)",179,,,,,,,
pyro,,tests/integration_tests/test_conjugate_gaussian_models.py,GaussianChainTests,test_elbo_reparameterized_N_is_17,"assert_equal(0.0, max_errors[0], prec=0.03)",179,,,,,,,
pyro,,tests/integration_tests/test_conjugate_gaussian_models.py,GaussianChainTests,test_elbo_nonreparameterized_N_is_3,"assert_equal(0.0, max_errors[0], prec=0.04)",179,,,,,,,
pyro,,tests/integration_tests/test_conjugate_gaussian_models.py,GaussianChainTests,test_elbo_nonreparameterized_N_is_5,"assert_equal(0.0, max_errors[0], prec=0.06)",179,,,,,,,
pyro,,tests/integration_tests/test_conjugate_gaussian_models.py,GaussianChainTests,test_elbo_nonreparameterized_N_is_7,"assert_equal(0.0, max_errors[0], prec=0.05)",179,,,,,,,
pyro,,tests/integration_tests/test_conjugate_gaussian_models.py,GaussianPyramidTests,test_elbo_nonreparameterized_two_layers,"assert_equal(0.0, max_log_sig_error, prec=0.04)",482,,,,,,,
pyro,,tests/integration_tests/test_conjugate_gaussian_models.py,GaussianPyramidTests,test_elbo_nonreparameterized_two_layers_model_permuted,"assert_equal(0.0, max_log_sig_error, prec=0.05)",482,,,,,,,
pyro,,tests/integration_tests/test_conjugate_gaussian_models.py,GaussianPyramidTests,test_elbo_nonreparameterized_three_layers_model_permuted,"assert_equal(0.0, max_log_sig_error, prec=0.05)",482,,,,,,,
pyro,,tests/infer/test_inference.py,PoissonGammaTests,test_elbo_nonreparameterized,"assert_equal(pyro.param('alpha_q'), self.alpha_n, prec=0.2, msg='{} vs {}'.format(pyro.param('alpha_q').detach().cpu().numpy(), self.alpha_n.detach().cpu().numpy()))",322,,,,,,,
pyro,,tests/infer/test_inference.py,PoissonGammaTests,test_renyi_nonreparameterized,"assert_equal(pyro.param('alpha_q'), self.alpha_n, prec=0.2, msg='{} vs {}'.format(pyro.param('alpha_q').detach().cpu().numpy(), self.alpha_n.detach().cpu().numpy()))",322,,,,,,,
pyro,,tests/infer/test_elbo_mapdata.py,none,test_elbo_mapdata[iplate-8],"assert_equal(loc_error.item(), 0, prec=0.05)",109,,,,,,,
pyro,,tests/infer/test_elbo_mapdata.py,none,test_elbo_mapdata[iplate-None],"assert_equal(loc_error.item(), 0, prec=0.05)",109,,,,,,,
pyro,,tests/infer/test_elbo_mapdata.py,none,test_elbo_mapdata[range-3],"assert_equal(loc_error.item(), 0, prec=0.05)",109,,,,,,,
pyro,,tests/infer/test_elbo_mapdata.py,none,test_elbo_mapdata[range-8],"assert_equal(loc_error.item(), 0, prec=0.05)",109,,,,,,,
pyro,,tests/infer/test_elbo_mapdata.py,none,test_elbo_mapdata[range-None],"assert_equal(loc_error.item(), 0, prec=0.05)",109,,,,,,,
pymc,,pymc/tests/test_mixture.py,TestMixture,test_mixture_list_of_normals,"assert_allclose(np.sort(trace['w'].mean(axis=0)),np.sort(self.norm_w),rtol=0.1, atol=0.1)",110,xfail,,,,,,
pymc,,pymc3/tests/test_variational_inference.py,none,test_fit_oo[SVGD-mini],"np.testing.assert_allclose(np.mean(trace['mu']), mu_post, rtol=0.05)",711,,,,,,,
pymc,,pymc/tests/test_step.py,TestStepMethods,test_step_continuous,assert (np.abs(s[i]-value[i]) < bound[i]),532,"long, checkoutside",,,,,,
pymc,a50b386f73df3960e2a7b45d0c2e24831715907c,pymc/tests/test_data_container.py,TestData,test_sample_after_set_data,"np.testing.assert_allclose(new_y, pp_trace['obs'].mean(axis=0), atol=0.1)",124,0.1,yes,yes,,yes,0.0000001,
pymc,,pymc3/tests/test_step.py,TestStepMethods,test_step_categorical,assert (np.abs(s[i]-value[i]) < bound[i]),532,,,,,,,
pymc,a50b386f73df3960e2a7b45d0c2e24831715907c,pymc/tests/test_data_container.py,TestData,test_sample_posterior_predictive_after_set_data,"np.testing.assert_allclose(x_test, y_test['obs'].mean(axis=0), atol=1e-1)",92,0.1,yes,yes,,yes,0.0000001,
pymc,,pymc3/tests/test_variational_inference.py,none,test_fit_oo[SVGD-full],"np.testing.assert_allclose(np.mean(trace['mu']), mu_post, rtol=0.05)",711,,,,,,,
pymc,,pymc3/tests/test_variational_inference.py,none,test_fit_oo[ASVGD-mini],"np.testing.assert_allclose(np.mean(trace['mu']), mu_post, rtol=0.05)",711,,,,,,,
pymc,,pymc3/tests/test_variational_inference.py,none,test_fit_oo[ASVGD-full],"np.testing.assert_allclose(np.mean(trace['mu']), mu_post, rtol=0.05)",711,,,,,,,
pymc,,pymc3/tests/test_smc.py,TestSMCABC,test_one_gaussian,"np.testing.assert_almost_equal(self.data.mean(), trace[a].mean(), decimal=1)",115,changed,,,,,,
pymc,,pymc3/tests/test_posteriors.py,TestMetropolisUniform,test_mean,"npt.assert_allclose(expected, samples.mean(0), rtol=0.1, atol=0.05)",28,,,,,,,
pymc,,pymc3/tests/test_posteriors.py,TestNUTSUniform2,test_mean,"npt.assert_allclose(expected, samples.mean(0), rtol=0.1, atol=0.05)",28,,,,,,,
pymc,,pymc3/tests/test_posteriors.py,TestNUTSUniform,test_mean,"npt.assert_allclose(expected, samples.mean(0), rtol=0.1, atol=0.05)",28,,,,,,,
pymc,,pymc3/tests/test_posteriors.py,TestNUTSUniform3,test_mean,"npt.assert_allclose(expected, samples.mean(0), rtol=0.1, atol=0.05)",28,,,,,,,
pymc,,pymc3/tests/test_posteriors.py,TestSliceUniform,test_mean,"npt.assert_allclose(expected, samples.mean(0), rtol=0.1, atol=0.05)",28,,,,,,,
pymc,,pymc3/tests/test_posteriors.py,TestNUTSNormal,test_mean,"npt.assert_allclose(expected, samples.mean(0), rtol=0.1, atol=0.05)",28,,,,,,,
pymc,,pymc3/tests/test_posteriors.py,TestNUTSStudentT,test_mean,"npt.assert_allclose(expected, samples.mean(0), rtol=0.1, atol=0.05)",28,,,,,,,
pymc,,pymc3/tests/test_posteriors.py,TestNUTSLKJCholeskyCov,test_kstest,assert (p > self.alpha),54,,,,,,,
numpyro,,test/infer/test_mcmc.py,none,test_improper_normal,"assert_allclose(jnp.mean(samples['loc'], 0), true_coef, atol=0.05)",186,0.05,yes,yes,,yes,0.0000001,
numpyro,,test/infer/test_infer_util.py,none,test_model_with_mask_false,"assert_allclose(mcmc.get_samples()['x'].mean(), 0., atol=0.15)",198,0.15,yes,yes,,,0.0000001,
numpyro,,test/infer/test_svi.py,none,test_beta_bernoulli,"assert_allclose(params['alpha_q'] / (params['alpha_q'] + params['beta_q']), 0.8, atol=0.05, rtol=0.05)",83,0.05,yes,yes,,yes,0.05,
numpyro,,test/test_optimizers.py,none,test_optim_multi_params,"assert jnp.allclose(param, jnp.zeros(3))",39,skip since assertion not classic,,,,,,
numpyro,,test/infer/test_infer_util.py,none,test_predictive_with_improper,"assert_allclose(jnp.mean(obs_pred), 0.9, atol=0.05)",119,0.05,yes,yes,,yes,0.0000001,
numpyro,,test/test_hmc_util.py,none,test_gaussian_subposterior,"assert_allclose(jnp.mean(draws, axis=0), mean, atol=0.03)",414,skip multiple test,,,,,,
numpyro,,test/test_distributions.py,none,test_beta_binomial_log_prob,"assert_allclose(actual, expected, rtol=0.02)",1271,skip weird output,yes,yes,,yes,0.0000001,
numpyro,,test/test_distributions.py,none,test_gamma_poisson_log_prob,"assert_allclose(actual, expected, rtol=0.05)",572,,,,,,,
numpyro,,test/test_mcmc.py,none,test_reuse_mcmc_run,"assert_allclose(mcmc.get_samples()['mu'].mean(), -3., atol=0.1)",542,,,,,,,
numpyro,,test/test_mcmc.py,none,test_change_point_x64,assert mode == 44,222,,,,,,,
numpyro,,test/test_mcmc.py,none,test_logistic_regression_x64,"assert_allclose(jnp.mean(samples['coefs'], 0), true_coefs, atol=0.22)",97,,,,,,,
numpyro,,test/test_mcmc.py,none,test_beta_bernoulli_x64,"assert_allclose(jnp.mean(samples['p_latent'], 0), true_probs, atol=0.05)",165,,,,,,,
numpyro,,test/test_mcmc.py,none,test_functional_beta_bernoulli_x64,"assert_allclose(jnp.mean(samples['p_latent'], 0), true_probs, atol=0.05)",489,,,,,,,
gpytorch,19e67f371d4641fd2f9ad7c8a7887361bdaa53d6,test/examples/test_kissgp_additive_classification.py,TestKISSGPAdditiveClassification,test_kissgp_classification_error,"self.assertLess(mean_abs_error.squeeze().item(), 0.15)",99,0.5,no,yes,yes,no,,
gpytorch,19e67f371d4641fd2f9ad7c8a7887361bdaa53d6,test/examples/test_svgp_gp_classification.py,TestSVGPClassification,test_classification_error,"self.assertLess(mean_abs_error.item(), 2e-1)",84,0.2,no,yes,yes,no,,
gpytorch,19e67f371d4641fd2f9ad7c8a7887361bdaa53d6,test/examples/test_svgp_gp_classification.py,TestSVGPClassification,test_predictive_ll_classification_error,"self.assertLess(mean_abs_error.item(), 2e-1)",84,0.2,no,yes,yes,no,,
gpytorch,19e67f371d4641fd2f9ad7c8a7887361bdaa53d6,test/examples/test_batch_svgp_gp_regression.py,TestSVGPRegression,test_regression_error,"self.assertLess(mean_abs_error2.item(), 1e-1)",97,0.1,no,yes,yes,no,,
gpytorch,19e67f371d4641fd2f9ad7c8a7887361bdaa53d6,test/examples/test_batch_svgp_gp_regression.py,TestSVGPRegression,test_regression_error_shared_inducing_locations,"self.assertLess(mean_abs_error2.item(), 1e-1)",132,0.1,no,yes,yes,no,,
gpytorch,19e67f371d4641fd2f9ad7c8a7887361bdaa53d6,test/examples/test_kissgp_multiplicative_regression.py,TestKISSGPMultiplicativeRegression,test_kissgp_gp_mean_abs_error,"self.assertLess(mean_abs_error.squeeze().item(), 0.15)",99,0.15,no,yes,yes,no,,
gpytorch,19e67f371d4641fd2f9ad7c8a7887361bdaa53d6,test/examples/test_spectral_mixture_gp_regression.py,TestSpectralMixtureGPRegression,test_spectral_mixture_gp_mean_abs_error,"self.assertLess(mean_abs_error.squeeze().item(), 0.2)",104,0.2,no,yes,yes,no,,
gpytorch,19e67f371d4641fd2f9ad7c8a7887361bdaa53d6,test/examples/test_unwhitened_svgp_regression.py,TestSVGPRegression,test_regression_error,"self.assertLess(mean_abs_error.item(), 1e-1)",82,0.1,no,yes,yes,no,,
gpytorch,19e67f371d4641fd2f9ad7c8a7887361bdaa53d6,test/examples/test_kissgp_gp_classification.py,TestKISSGPClassification,test_kissgp_classification_error,"self.assertLess(mean_abs_error.squeeze().item(), 1e-5)",86,0.00005,no,yes,yes,no,,
sbi,,tests/linearGaussian_mdn.py,none,test_mdn_with_snpe,"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/linearGaussian_mdn.py,none,test_mdn_with_snle,"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/linearGaussian_snle_test.py,none,test_c2st_snl_on_linearGaussian[uniform-1],"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/linearGaussian_snle_test.py,none,test_c2st_snl_on_linearGaussian[uniform-2],"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/linearGaussian_snle_test.py,none,test_c2st_snl_on_linearGaussian[gaussian-1],"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/linearGaussian_snle_test.py,none,test_c2st_snl_on_linearGaussian[gaussian-2],"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/linearGaussian_snle_test.py,none,test_c2st_multi_round_snl_on_linearGaussian,"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/linearGaussian_snpe_test.py,none,test_c2st_snpe_on_linearGaussian[2-gaussian],"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/linearGaussian_snpe_test.py,none,TestSVGPRegression,"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/linearGaussian_snpe_test.py,none,test_c2st_snpe_on_linearGaussian[1-gaussian],"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/linearGaussian_snpe_test.py,none,test_c2st_snpe_on_linearGaussian_different_dims,"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/linearGaussian_snpe_test.py,none,test_c2st_multi_round_snpe_on_linearGaussian,"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/linearGaussian_snre_test.py,none,test_c2st_sre_on_linearGaussian_different_dims,"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/linearGaussian_snre_test.py,none,test_c2st_sre_on_linearGaussian,"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/multiprocessing_test.py,none,test_benchmarking_sp[1],assert toc_joblib <= toc_sp * 1.1,55,,,,,,,
sbi,,tests/multiprocessing_test.py,none,test_benchmarking_sp[10],assert toc_joblib <= toc_sp * 1.1,55,,,,,,,
sbi,,tests/multiprocessing_test.py,none,test_benchmarking_sp[100],assert toc_joblib <= toc_sp * 1.1,55,,,,,,,
sbi,,tests/inference_with_NaN_simulator_test.py,none,test_inference_with_nan_simulator[SNPE_C-True-0.05],"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/inference_with_NaN_simulator_test.py,none,test_inference_with_nan_simulator[SNLE_A-True-0.05],"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/inference_with_NaN_simulator_test.py,none,test_inference_with_nan_simulator[SNRE_B-True-0.05],"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
sbi,,tests/linearGaussian_snle_test.py,none,test_c2st_snl_on_linearGaussian_different_dims,"np.testing.assert_allclose(score, val, rtol=0, atol=0.1)",141,,,,,,,
pymc-learn,,pmlearn/gaussian_process/tests/test_gpr.py,TestGaussianProcessRegressorPredict,test_predict_returns_predictions,"npt.assert_equal(self.y_test.shape, preds.shape)",93,,,,,,,
pymc-learn,,pmlearn/gaussian_process/tests/test_gpr.py,TestSparseGaussianProcessRegressorPredict,test_predict_returns_predictions,"npt.assert_equal(self.y_test.shape, preds.shape)",333,,,,,,,
pymc-learn,,pmlearn/gaussian_process/tests/test_gpr.py,TestSparseGaussianProcessRegressorPredict,test_predict_returns_predictions,"npt.assert_equal(self.y_test.shape, preds.shape)",341,,,,,,,
pymc-learn,,pmlearn/linear_model/tests/test_logistic.py,TestHierarchicalLogisticRegressionPredictProba,test_predict_proba_returns_probabilities,"npt.assert_equal(probs.shape, self.y_test.shape)",107,,,,,,,
pymc-learn,,pmlearn/linear_model/tests/test_logistic.py,TestHierarchicalLogisticRegressionPredictProba,test_predict_proba_returns_probabilities_and_std,"npt.assert_equal(probs.shape, self.y_test.shape)",115,,,,,,,
pymc-learn,,pmlearn/linear_model/tests/test_logistic.py,TestHierarchicalLogisticRegressionPredict,test_predict_returns_predictions,"npt.assert_equal(preds.shape, self.y_test.shape)",132,,,,,,,
pymc-learn,,pmlearn/linear_model/tests/test_logistic.py,TestHierarchicalLogisticRegressionScore,test_score_scores,"npt.assert_array_less(naive_score, score)",144,,,,,,,
pymc-learn,,pmlearn/linear_model/tests/test_logistic.py,TestHierarchicalLogisticRegressionSaveandLoad,test_save_and_load_work_correctly,"npt.assert_almost_equal(probs2, probs1, decimal=1)",170,,,,,,,
pyGPGO,,tests/test_GPGO.py,none,test_GPGO,"np.testing.assert_allclose(res['x'], 0.7, atol=0.1)",24,0.1,yes,yes,,yes,0.0000001,
pyGPGO,,tests/test_GPGO.py,none,test_GPGO_mcmc,"np.testing.assert_allclose(res['x'], 0.7, atol=0.1)",36,too_long,,,,,,
pyGPGO,,tests/test_GPGO.py,none,test_GPGO_sk,"np.testing.assert_allclose(res['x'], 0.75, atol=0.05)",47,0.05,yes,yes,,yes,0.0000001,
horovod,,test/test_keras.py,KerasTests,test_load_model,"self.assertEqual(K.get_value(opt.lr), K.get_value(new_opt.lr))",92,,,,,,,
fairseq,8548f1d40124a036af7f9df55a45030451459823,tests/test_multi_corpus_sampled_dataset.py,TestMultiCorpusSampledDataset,test_multi_corpus_sampled_dataset_uniform_sample,"self.assertLess(abs(sample_from_first_ds_percentage - expected_sample_from_first_ds_percentage),0.01,)",69,0.01,no,yes,,no,,
fairseq,8548f1d40124a036af7f9df55a45030451459823,tests/test_multi_corpus_sampled_dataset.py,TestMultiCorpusSampledDataset,test_multi_corpus_sampled_dataset_weighted_sample,"self.assertLess(abs(sample_from_first_ds_percentage - expected_sample_from_first_ds_percentage),0.01,)",69,0.01,no,yes,,no,,
autokeras,,tests/integration_tests/task_api_test.py,none,test_structured_data_from_numpy_regressor,"assert clf.predict(x_test).shape == (len(y_test), 1)",59,,,,,,,
autokeras,,tests/integration_tests/task_api_test.py,none,test_structured_data_from_numpy_classifier,"assert clf.predict(x_test).shape == (len(y_test), 3)",74,,,,,,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_transformers.py,TestTransformerRanker,test_repeater,"self.assertGreaterEqual(test['hits@1'], 0.90)",114,0.9,no,no,,yes,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_transformers.py,TestTransformerGenerator,test_xlm,"self.assertLessEqual(test['ppl'], 1.30)",538,1.3,no,yes,,yes,,
parlai,,tests/test_transformers.py,TestTransformerGenerator,test_beamsearch,"self.assertGreaterEqual(test['bleu-4'], 0.90)",305,changed,,,,,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_transformers.py,TestTransformerRanker,test_alt_reduction,"self.assertGreaterEqual(test['hits@1'], 0.90)",257,0.9,no,no,,yes,,
parlai,,tests/test_seq2seq.py,TestHogwildSeq2seq,test_generation_multi,"self.assertLess(test['ppl'], 1.2)",127,deleted,https://github.com/facebookresearch/ParlAI/pull/2010,,,,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestTransformerRanker,test_train_inline,"self.assertGreaterEqual(valid['hits@1'], threshold)",57,0.8,no,no,,yes,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestTransformerRanker,test_train_batch,"self.assertGreaterEqual(valid['hits@1'], threshold)",68,0.8,no,no,,yes,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestTransformerRanker,test_train_fixed,"self.assertGreaterEqual(valid['hits@1'], threshold)",81,0.8,no,no,,yes,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestTransformerRanker,test_train_batch_all,"self.assertGreaterEqual(valid['hits@1'], threshold)",92,0.8,no,no,,yes,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestTransformerRanker,test_eval_inline,"self.assertGreaterEqual(valid['hits@1'], threshold)",102,0.8,no,no,,yes,,
parlai,,tests/test_tra.py,TestTransformerRanker,test_eval_batch,"self.assertGreaterEqual(valid['hits@1'], threshold)",105,changed,,,,,,
parlai,,tests/test_tra.py,TestTransformerRanker,test_eval_fixed,"self.assertGreaterEqual(valid['hits@100'], 0.1)",206,deleted,https://github.com/facebookresearch/ParlAI/pull/3597,,,,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestTransformerRanker,test_eval_vocab,"self.assertEqual(valid['hits@100'], 0)",121,,,,,,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestMemNN,test_train_inline,"self.assertGreaterEqual(valid['hits@1'], threshold)",57,0.5,no,no,,yes,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestMemNN,test_train_batch,"self.assertGreaterEqual(valid['hits@1'], threshold)",68,0.5,no,no,,yes,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestMemNN,test_train_fixed,"self.assertGreaterEqual(valid['hits@1'], threshold)",81,0.5,no,no,,yes,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestMemNN,test_train_batch_all,"self.assertGreaterEqual(valid['hits@1'], threshold)",92,0.5,no,no,,yes,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestMemNN,test_eval_inline,"self.assertGreaterEqual(valid['hits@1'], threshold)",102,0.5,no,no,,yes,,
parlai,,tests/test_tra.py,TestMemNN,test_eval_batch,"self.assertGreaterEqual(valid['hits@1'], threshold)",105,changed,,,,,,
parlai,,tests/test_tra.py,TestMemNN,test_eval_fixed,"self.assertGreaterEqual(valid['hits@100'], 0.1)",206,deleted,https://github.com/facebookresearch/ParlAI/pull/3597,,,,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestMemNN,test_eval_vocab,"self.assertEqual(valid['hits@100'], 0)",121,0,no,no,,yes,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestPolyRanker,test_train_inline,"self.assertGreaterEqual(valid['hits@1'], threshold)",57,0.6,no,no,,yes,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestPolyRanker,test_train_batch,"self.assertGreaterEqual(valid['hits@1'], threshold)",68,0.6,no,no,,yes,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestPolyRanker,test_train_fixed,"self.assertGreaterEqual(valid['hits@1'], threshold)",81,0.6,no,no,,yes,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestPolyRanker,test_train_batch_all,"self.assertGreaterEqual(valid['hits@1'], threshold)",92,0.6,no,no,,yes,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestPolyRanker,test_eval_inline,"self.assertGreaterEqual(valid['hits@1'], threshold)",102,0.6,no,no,,yes,,
parlai,,tests/test_tra.py,TestPolyRanker,test_eval_batch,"self.assertGreaterEqual(valid['hits@1'], threshold)",105,changed,,,,,,
parlai,,tests/test_tra.py,TestPolyRanker,test_eval_fixed,"self.assertGreaterEqual(valid['hits@100'], 0.1)",206,deleted,https://github.com/facebookresearch/ParlAI/pull/3597,,,,,
parlai,4b1d07d0eeb14f849ad930eeb001327f9bfc2db1,tests/test_tra.py,TestPolyRanker,test_eval_vocab,"self.assertEqual(valid['hits@100'], 0)",121,0,no,no,,,,
cleverhans,e5d00e537ce7ad6119ed5a8db1f0e9736d1f6e1d,cleverhans/torch/tests/test_attacks.py,TestSPSA,test_adv_example_success_rate_l2,"self.assertLess(adv_acc, .5)",75,0.5,no,yes,changed,no,,
cleverhans,e5d00e537ce7ad6119ed5a8db1f0e9736d1f6e1d,cleverhans/torch/tests/test_attacks.py,TestSPSA,test_targeted_adv_example_success_rate_l2,"self.assertGreater(adv_success, .7)",84,0.7,no,no,changed,no,,
cleverhans,e5d00e537ce7ad6119ed5a8db1f0e9736d1f6e1d,cleverhans/torch/tests/test_attacks.py,TestSPSA,test_targeted_adv_example_success_rate_linf,"self.assertGreater(adv_success, .7)",84,0.7,no,no,changed,no,,
cleverhans,e5d00e537ce7ad6119ed5a8db1f0e9736d1f6e1d,cleverhans/torch/tests/test_attacks.py,TestSPSA,test_adv_example_success_rate_linf,"self.assertLess(adv_acc, .5)",75,0.5,no,yes,changed,no,,
cleverhans,e5d00e537ce7ad6119ed5a8db1f0e9736d1f6e1d,cleverhans/torch/tests/test_attacks.py,TestSPSA,test_attack_strength,"self.assertLess(adv_acc, .1)",746,0.1,no,yes,changed,no,,
gensim,,gensim/test/test_sklearn_api.py,TestLdaWrapper,testSetGetParams,"self.assertEqual(getattr(self.model.gensim_model, 'decay'), 0.7)",402,removed ,a21d9cc768598640f38e4bd03d368f8712a9aa77,,,,,
gensim,,gensim/test/test_sklearn_api.py,TestLdaWrapper,testTransform,"self.assertEqual(matrix.shape[1], self.model.num_topics)",323,removed ,,,,,,
gensim,,gensim/test/test_sklearn_api.py,TestLdaWrapper,testPipeline,"self.assertGreaterEqual(score, 0.40)",382,removed ,,,,,,
gensim,,gensim/test/test_sklearn_api.py,TestLdaSeqWrapper,testTransform,"self.assertEqual(transformed_vecs.shape[1], self.model.num_topics)",541,removed ,,,,,,
gensim,,gensim/test/test_sklearn_api.py,TestLdaSeqWrapper,testPipeline,"self.assertGreater(score, 0.50)",562,removed ,,,,,,
gensim,,gensim/test/test_sklearn_api.py,TestLdaSeqWrapper,testSetGetParams,"self.assertEqual(getattr(self.model.gensim_model, 'num_topics'), 3)",571,removed ,,,,,,
gensim,6e362663f23967f3c1931e2cb18d3d25f92aabb5,gensim/test/test_ldaseqmodel.py,TestLdaSeq,test_topic_word,"self.assertAlmostEqual(topics[0][0][1], expected_topic_word[0][1], places=2)",217,0.005,yes,yes,not really random,no,0,
gensim,6e362663f23967f3c1931e2cb18d3d25f92aabb5,gensim/test/test_ldaseqmodel.py,TestLdaSeq,test_doc_topic,"self.assertAlmostEqual(doc_topic[0], expected_doc_topic, places=2)",223,0.005,yes,yes,not really random,no,0,
gensim,,gensim/test/test_ldaseqmodel.py,TestLdaSeq,test_dtype_backward_compatibility,"np.testing.assert_allclose(expected_topics, topics, rtol=1e-05, atol=1e-08)",238,not really good enough,,,,,,
gensim,6e362663f23967f3c1931e2cb18d3d25f92aabb5,gensim/test/test_word2vec.py,TestWord2VecModel,test_parallel,"self.assertLess(neighbor_rank, 20)",836,20,no,yes,,no,,
rasa,,tests/nlu/test_evaluation.py,none,test_run_cv_evaluation_with_response_selector,"assert len(entity_results.test[""DIETClassifier""][""F1-score""]) == n_folds",428,,,,,,,
ml-agents,,ml-agents/mlagents/trainers/tests/test_simple_rl.py,none,test_simple_ppo,assert all(reward > success_threshold for reward in processed_rewards),155,,,,,,,
ml-agents,,ml-agents/mlagents/trainers/tests/test_simple_rl.py,none,test_2d_ppo,assert all(reward > success_threshold for reward in processed_rewards),155,,,,,,,
ml-agents,,ml-agents/mlagents/trainers/tests/test_simple_rl.py,none,test_visual_ppo,assert all(reward > success_threshold for reward in processed_rewards),155,,,,,,,
ml-agents,,ml-agents/mlagents/trainers/tests/test_simple_rl.py,none,test_visual_advanced_ppo,assert all(reward > success_threshold for reward in processed_rewards),155,,,,,,,
ml-agents,,ml-agents/mlagents/trainers/tests/test_simple_rl.py,none,test_recurrent_ppo,assert all(reward > success_threshold for reward in processed_rewards),155,,,,,,,
ml-agents,,ml-agents/mlagents/trainers/tests/test_simple_rl.py,none,test_simple_sac,assert all(reward > success_threshold for reward in processed_rewards),155,,,,,,,
ml-agents,,ml-agents/mlagents/trainers/tests/test_simple_rl.py,none,test_2d_sac,assert all(reward > success_threshold for reward in processed_rewards),155,,,,,,,
ml-agents,,ml-agents/mlagents/trainers/tests/test_simple_rl.py,none,test_visual_sac,assert all(reward > success_threshold for reward in processed_rewards),155,,,,,,,
ml-agents,,ml-agents/mlagents/trainers/tests/test_simple_rl.py,none,test_visual_advanced_sac,assert all(reward > success_threshold for reward in processed_rewards),155,,,,,,,
ml-agents,,ml-agents/mlagents/trainers/tests/test_simple_rl.py,none,test_recurrent_sac,assert all(reward > success_threshold for reward in processed_rewards),155,,,,,,,
ml-agents,,ml-agents/mlagents/trainers/tests/test_simple_rl.py,none,test_simple_ghost,assert all(reward > success_threshold for reward in processed_rewards),155,,,,,,,
ml-agents,,ml-agents/mlagents/trainers/tests/test_simple_rl.py,none,test_simple_asymm_ghost,assert all(reward > success_threshold for reward in processed_rewards),155,,,,,,,
ml-agents,,ml-agents/mlagents/trainers/tests/test_simple_rl.py,none,test_gail_visual_ppo,assert all(reward > success_threshold for reward in processed_rewards),155,,,,,,,
ml-agents,,ml-agents/mlagents/trainers/tests/test_simple_rl.py,none,test_gail_visual_sac,assert all(reward > success_threshold for reward in processed_rewards),155,,,,,,,
imbalanced-learn,,imblearn/ensemble/tests/test_forest.py,none,test_balanced_random_forest,assert len(brf.feature_importances_) == imbalanced_dataset[0].shape[1],74,not probabistic,,,,,,
imbalanced-learn,f1abf75d721dcf7deee77a41abc5fe147c64dc90,imblearn/ensemble/tests/test_forest.py,none,test_balanced_random_forest_oob,assert abs(test_score - est.oob_score_) < 0.1,120,0.1,no,yes,,no,,
trax,,trax/rl/training_test.py,TrainingTest,test_policytrainer_save_restore,"self.assertEqual(trainer4._policy_trainer.step, 4)",110,rewrote,not really probablistic,,,,,
trax,,trax/rl/training_test.py,TrainingTest,test_policytrainer_cartpole,"self.assertEqual(trainer.current_epoch, ep + 1)",142,,,,,,,
trax,,trax/rl/actor_critic_test.py,ActorCriticTest,test_a2ctrainer_save_restore,"self.assertEqual(trainer2._policy_trainer.step, 6)",82,,,,,,,
trax,,trax/rl/actor_critic_test.py,ActorCriticTest,test_sanity_ppo_cartpole,"self.assertEqual(2, trainer.current_epoch)",141,,,,,,,
trax,,trax/rl/actor_critic_test.py,ActorCriticTest,test_awrtrainer_cartpole,"self.assertEqual(1, trainer.current_epoch)",173,,,,,,,
trax,,trax/rl/actor_critic_test.py,ActorCriticTest,test_awrtrainer_cartpole_shared,"self.assertEqual(1, trainer.current_epoch)",216,,,,,,,
trax,,trax/rl/actor_critic_test.py,ActorCriticTest,test_sampling_awrtrainer_cartpole,"self.assertEqual(1, trainer.current_epoch)",285,,,,,,,
trax,,trax/rl/actor_critic_test.py,ActorCriticTest,test_sampling_awrtrainer_cartpole_sample_all_discrete,"self.assertEqual(1, trainer.current_epoch)",318,,,,,,,
trax,,trax/rl/actor_critic_joint_test.py,ActorCriticJointTest,test_awrjoint_save_restore,"self.assertEqual(trainer2._trainer.step, 3)",70,,,,,,,
trax,,trax/rl/actor_critic_joint_test.py,ActorCriticJointTest,test_jointppotrainer_cartpole,"self.assertEqual(2, trainer.current_epoch)",96,,,,,,,
trax,,trax/rl/actor_critic_joint_test.py,ActorCriticJointTest,test_jointawrtrainer_cartpole,"self.assertEqual(2, trainer.current_epoch)",117,,,,,,,
trax,,trax/rl/actor_critic_joint_test.py,ActorCriticJointTest,test_jointa2ctrainer_cartpole,"self.assertEqual(2, trainer.current_epoch)",138,,,,,,,
trax,,trax/rl/actor_critic_joint_test.py,ActorCriticJointTest,test_jointa2ctrainer_cartpole,"self.assertEqual(2, trainer.current_epoch)",173,,,,,,,
bambi,,bambi/tests/test_built_models.py,none,test_logistic_regression,"np.testing.assert_allclose(a[x], b[x], atol=0, rtol=0.01)",43,removed,,,,,,
bambi,,bambi/tests/test_built_models.py,none,test_many_fixed_many_random,"np.testing.assert_allclose(a[x], b[x], atol=0, rtol=0.01)",43,removed,,,,,,
deepchem,,deepchem/models/tests/test_overfit.py,none,test_regression_overfit,assert (scores[regression_metric.name] < 0.1)),137,0.1,no,yes,,no,,
deepchem,,deepchem/models/tests/test_overfit.py,none,test_sklearn_regression_overfit,assert (scores[regression_metric.name] > 0.7),,0.7,no,no,,no,,
deepchem,,deepchem/models/tests/test_overfit.py,none,test_robust_multitask_regression_overfit,assert (scores[regression_metric.name] < 0.2),,0.2,no,yes,,no,,
deepchem,,deepchem/models/tests/test_pretrained_keras.py,TestPretrained,test_load_from_pretrained,"np.testing.assert_array_almost_equal(source_val, dest_val)",,0.0000015,yes,yes,,no,0,
deepchem,,deepchem/models/tests/test_cnn.py,TestCNN,test_1d_cnn_regression,assert (scores[regression_metric.name] < 0.1),,0.1,no,yes,,no,,
deepchem,,deepchem/models/tests/test_cnn.py,TestCNN,test_cnn_regression_uncertainty,assert (np.mean(np.abs((y - pred))) < 0.3),,0.3,no,yes,,no,,
deepchem,,deepchem/models/tests/test_attentivefp.py,none,test_attentivefp_regression,assert (scores['mean_absolute_error'] < 0.5),,0.5,no,yes,,no,,
deepchem,,deepchem/models/tests/test_lcnn.py,none,test_lcnn_regression,assert (scores[regression_metric.name] < 0.6),,0.6,no,yes,,no,,
deepchem,,deepchem/models/tests/test_gat.py,none,test_gat_reload,assert (scores['mean-roc_auc_score'] >= 0.85),,0.85,no,no,,yes,,
deepchem,,deepchem/models/tests/test_overfit.py,none,test_textCNN_singletask_classification_overfit,assert (scores[classification_metric.name] > 0.8),,0.8,no,no,,no,,
deepchem,,deepchem/utils/test/test_geometry_utils.py,TestGeometryUtils,test_subract_centroid,"np.testing.assert_almost_equal(new_centroid, np.zeros_like(new_centroid))",,0.0000015,yes,yes,,no,0,
tfcausalimpact,,tests/test_main.py,none,test_default_model_sparse_linear_regression_arma_data,"assert (tf.abs(tf.reduce_mean(weights, axis=0).numpy()[1]) < 0.05)",328,0.05,no,yes,,no,,
kornia,,test/color/test_raw.py,TestRawToRgb,test_cfas_not_the_same,"assert (torch.max((kornia.color.raw_to_rgb(data, kornia.color.CFA.BG) - kornia.color.raw_to_rgb(data, kornia.color.CFA.RG))) > 0.0)",64,0,no,no,,no,,
kornia,,test/geometry/calibration/test_undistort.py,TestUndistortImage,test_shape_extra_dims,"torch.testing.assert_allclose(imu[0], imu[1])",230,0.00000001,yes,yes,,yes,0.00001,
pymc,,pymc/pymc/tests/test_sampling.py,TestSamplePPC,test_normal_scalar,assert pval > 0.001,511,0.001,no,no,,no,,
pymc,,pymc/pymc/tests/test_sampling.py,TestSamplePPC,test_sum_normal,assert pval > 0.001,660,0.001,no,no,,no,,
nlp-architect,,nlp-architect/tests/test_tcn.py,none,test_tcn_adding,assert (training_loss < 0.001),51,0.001,no,yes,,no,,
stellargraph,,stellargraph/tests/layer/test_watch_your_step.py,none,test_AttentiveWalk,"np.testing.assert_allclose(output, random_partial_powers.mean(axis=1), rtol=1e-05, atol=1e-08)",44,0.00000001,yes,yes,,no,0.00001,
stellargraph,,stellargraph/tests/test_losses.py,none,test_graph_log_likelihood,"np.testing.assert_allclose(actual_loss, expected_loss, rtol=0.01)",45,0,yes,yes,,no,0.01,
stellargraph,,stellargraph/tests/core/test_utils.py,none,test_rescale_laplacian,assert (rl.max() < 1),226,1,no,yes,,no,,
hummingbird,,hummingbird/tests/test_backends.py,TestBackends,test_backends_pytorch,"np.testing.assert_allclose(model.predict_proba(X), hb_model.predict_proba(X), rtol=1e-06, atol=1e-06)",97,0.000001,yes,yes,,no,0.000001,
hummingbird,,hummingbird/tests/test_extra_conf.py,TestExtraConf,test_torch_regression_batch,"np.testing.assert_allclose(model.predict(X), hb_model.predict(X), rtol=1e-06, atol=1e-06)",153,0.000001,yes,yes,,no,0.000001,
pgmpy,,pgmpy/pgmpy/tests/test_estimators/test_CITests.py,TestChiSquare,test_exactly_same_vars,"np_test.assert_almost_equal(p_value, 0, decimal=5)",250,0.000005,yes,yes,,no,0,
pgmpy,,pgmpy/pgmpy/tests/test_models/test_DynamicBayesianNetwork.py,TestDynamicBayesianNetworkMethods,test_fit,"np_test.assert_almost_equal(cpd.values, 0.5, decimal=1)",436,0.05,yes,yes,,no,0,
pgmpy,,pgmpy/pgmpy/tests/test_inference/test_CausalInference.py,TestEstimator,test_create_estimator,"self.assertAlmostEqual(ate, 0, places=0)",456,0.5,yes,yes,,no,0,
pgmpy,,pgmpy/pgmpy/tests/test_sampling/test_continuous_sampling.py,TestHMCInference,test_find_resonable_stepsize,"np.testing.assert_almost_equal(stepsize, 2.0)",59,0.0000015,yes,yes,,no,0,
pgmpy,,pgmpy/pgmpy/tests/test_estimators/test_SEMEstimator.py,TestIVEstimator,test_fit,self.assertTrue(((param - 1) < 0.027)),171,0.027,no,yes,,no,,
umap,,umap/umap/tests/test_umap_ops.py,none,test_multi_component_layout,assert (error < 15.0),71,15,no,yes,,no,,
umap,,umap/umap/tests/test_umap_ops.py,none,test_multi_component_layout_precomputed,assert (error < 15.0),101,15,no,yes,,no,,
umap,,umap/umap/tests/test_umap_ops.py,none,test_umap_update_large,assert (error < 3.0),262,3,no,yes,,no,,
umap,,umap/umap/tests/test_densmap.py,none,test_densmap_trustworthiness,assert (trust >= 0.72),26,0.72,no,no,,yes,,
umap,,umap/umap/tests/test_umap_on_iris.py,none,test_umap_transform_on_iris,assert (trust >= 0.85),88,0.85,no,no,,yes,,
umap,,umap/umap/tests/test_umap_trustworthiness.py,none,test_umap_trustworthiness_random_init,assert (trust >= 0.75),51,0.75,no,no,,yes,,
umap,,umap/umap/tests/test_umap_trustworthiness.py,none,test_umap_trustworthiness_fast_approx,assert (trust >= 0.75),40,0.75,no,no,,yes,,
umap,,umap/umap/tests/test_umap_on_iris.py,none,test_umap_transform_on_iris_w_pynndescent,assert (trust >= 0.85),107,0.85,no,no,,yes,,
umap,,umap/umap/tests/test_umap_on_iris.py,none,test_umap_transform_on_iris_modified_dtype,assert (trust >= 0.8),120,0.8,no,no,,yes,,
umap,,umap/umap/tests/test_umap_trustworthiness.py,none,test_umap_sparse_trustworthiness,assert (trust >= 0.85),25,0.85,no,no,,yes,,
umap,,umap/umap/tests/test_umap_on_iris.py,none,test_umap_sparse_transform_on_iris,assert (trust >= 0.8),141,0.8,no,no,,yes,,
umap,,umap/umap/tests/test_umap_metrics.py,none,test_sparse_hellinger,"assert_array_almost_equal(test_matrix, dist_matrix, err_msg=""Sparse distances don't match for metric hellinger"", decimal=3)",440,0.0005,yes,yes,,no,0,
umap,,umap/umap/tests/test_umap_on_iris.py,none,test_precomputed_transform_on_iris,assert (trust >= 0.85),165,0.85,no,no,,yes,,
umap,,umap/umap/tests/test_umap_metrics.py,none,test_mahalanobis,"assert_array_almost_equal(test_matrix, dist_matrix, err_msg=""Distances don't match for metric mahalanobis"")",367,0.0000005,yes,yes,,no,0,
zfit,,zfit/tests/test_constraint.py,none,test_poisson_constrain,"np.testing.assert_allclose(poiss_constr_val, true_val)",52,0,yes,yes,,no,0.0000001,
zfit,,zfit/tests/test_math.py,none,test_reduce_geometric_mean,"np.testing.assert_allclose(gmea_z, gmean_np)",57,0,yes,yes,,no,0.0000001,
zfit,,zfit/tests/test_basePDF.py,none,test_analytic_sampling,assert (1004.0 <= min(sample[0])),282,1004,no,no,,yes,,yes
refnx,,refnx/refnx/analysis/test/test_objective.py,TestObjective,test_lnsigma,"assert_allclose((self.objective.logl() + amend), bo.logl())",354,0,yes,yes,,no,0.0000001,
refnx,,refnx/refnx/reflect/test/test_reflect.py,TestReflect,test_reflectivity_emcee,"assert_allclose(mcmc_val, res.x, rtol=0.05)",564,0,yes,yes,,no,0.05,
ml-agents,,ml-agents/ml-agents-envs/mlagents_envs/tests/test_rpc_utils.py,none,test_process_pixels,assert ((np.sum((in_array - out_array)) / np.prod(in_array.shape)) < 0.01),240,0.01,no,yes,,no,,
ml-agents,,ml-agents/ml-agents-envs/mlagents_envs/tests/test_rpc_utils.py,none,test_process_pixels_gray,"assert (np.mean((in_array.mean(axis=2, keepdims=True) - out_array)) < 0.01)",261,0.01,no,yes,,no,,
ml-agents,,ml-agents/ml-agents-envs/mlagents_envs/tests/test_rpc_utils.py,none,test_process_pixels_multi_png,assert ((np.sum((in_array - out_array)) / np.prod(in_array.shape)) < 0.01),252,0.01,no,yes,,no,,
coax,,coax/coax/policy_objectives/_deterministic_pg_test.py,TestDeterministicPG,test_update_boxspace,"self.assertGreater(jnp.max(jnp.abs(tree_ravel(grads))), 0.0)",50,0,no,no,,no,,
coax,,coax/coax/policy_objectives/_deterministic_pg_test.py,TestDeterministicPG,test_update_discrete,"self.assertGreater(jnp.max(jnp.abs(tree_ravel(grads))), 0.0)",29,0,no,no,,no,,
coax,,coax/coax/policy_objectives/_ppo_clip_test.py,TestPPOClip,test_update_discrete,"self.assertGreater(jnp.max(jnp.abs(tree_ravel(grads))), 0.0)",27,0,no,no,,no,,
coax,,coax/coax/policy_objectives/_soft_pg_test.py,TestSoftPG,test_update_boxspace,"self.assertGreater(jnp.max(jnp.abs(tree_ravel(grads))), 0.0)",75,0,no,no,,no,,
coax,,coax/coax/policy_objectives/_soft_pg_test.py,TestSoftPG,test_update_discrete,"self.assertGreater(jnp.max(jnp.abs(tree_ravel(grads))), 0.0)",52,0,no,no,,no,,
coax,,coax/coax/policy_objectives/_vanilla_pg_test.py,TestVanillaPG,test_update_box,"self.assertGreater(jnp.max(jnp.abs(tree_ravel(grads))), 0.0)",48,0,no,no,,no,,
coax,,coax/coax/policy_objectives/_vanilla_pg_test.py,TestVanillaPG,test_update_box_entropyreg,"self.assertGreater(jnp.max(jnp.abs(tree_ravel(grads))), 0.0)",90,0,no,no,,no,,
coax,,coax/coax/policy_objectives/_vanilla_pg_test.py,TestVanillaPG,test_update_box_kldivreg,"self.assertGreater(jnp.max(jnp.abs(tree_ravel(grads))), 0.0)",132,0,no,no,,no,,
coax,,coax/coax/policy_objectives/_vanilla_pg_test.py,TestVanillaPG,test_update_discrete,"self.assertGreater(jnp.max(jnp.abs(tree_ravel(grads))), 0.0)",28,0,no,no,,no,,
coax,,coax/coax/policy_objectives/_vanilla_pg_test.py,TestVanillaPG,test_update_discrete_entropyreg,"self.assertGreater(jnp.max(jnp.abs(tree_ravel(grads))), 0.0)",69,0,no,no,,no,,
coax,,coax/coax/policy_objectives/_vanilla_pg_test.py,TestVanillaPG,test_update_discrete_kldivreg,"self.assertGreater(jnp.max(jnp.abs(tree_ravel(grads))), 0.0)",111,0,no,no,,no,,
allennlp,,allennlp/tests/training/metrics/spearman_correlation_test.py,SpearmanCorrelationTest,test_masked_computation,assert ((expected_spearman_correlation * spearman_correlation.get_metric()) > 0),106,0,no,no,,no,,
allennlp,,allennlp/tests/models/multitask_test.py,TestMultiTaskModel,test_forward_works,assert (abs((outputs['loss'].item() - combined_loss)) <= 1e-06),84,0.000001,no,yes,,yes,,
allennlp,,allennlp/tests/modules/sampled_softmax_loss_test.py,TestSampledSoftmaxLoss,test_choice,assert (num_tries >= 50),16,50,no,no,,yes,,
allennlp,,allennlp/tests/modules/sampled_softmax_loss_test.py,TestSampledSoftmaxLoss,test_sampled_equals_unsampled_when_biased_against_non_sampled_positions,assert (abs(pct_error) < 0.001),98,0.001,no,yes,,no,,
allennlp,,allennlp/tests/nn/initializers_test.py,TestInitializers,test_block_orthogonal_can_initialize,"numpy.testing.assert_array_almost_equal(matrix_product, numpy.eye(matrix_product.shape[(- 1)]), 6)",67,0.0000005,yes,yes,,no,0,
trax,,trax/trax/rl/advantages_test.py,AdvantagesTest,test_monte_carlo_bias_is_zero,"np.testing.assert_allclose(bias, 0, atol=0.1)",101,0.1,yes,yes,,no,0.0000001,
trax,,trax/trax/rl/space_serializer_test.py,BoxSpaceSerializerTest,test_commutes,"np.testing.assert_array_almost_equal(input_array, output_array, decimal=5)",54,0.000005,yes,yes,,no,0,
trax,,trax/trax/layers/combinators_test.py,ChunkTest,test_chunk,"self.assertLess(np.sum(((y - z) ** 2)), 1e-05)",495,0.00001,no,yes,,no,,
trax,,trax/trax/layers/core_test.py,EmbeddingTest,test_new_weights,"self.assertLess(np.abs(np.mean(w)), 0.4)",175,0.4,no,yes,,no,,
trax,,trax/trax/rl/value_tasks_test.py,ValueTasksTest,test_value_error_low_with_syncs,"self.assertGreater(error_before, 2.0)",132,2,no,no,,no,,
trax,,trax/trax/rl/value_tasks_test.py,ValueTasksTest,test_value_error_high_without_syncs,"self.assertGreater(error_after, 0.8)",107,0.8,no,no,,no,,